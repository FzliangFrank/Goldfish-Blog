{
  "hash": "fbf47965d1de5180d0265e7985a248df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Statistic Inference\nformat: html\ndate: 2023-05-21\nauthor: Old Frank\nexecute-dir: ./2023/05-21-R\n---\n\n\nsource: https://www.tidymodels.org/books/moderndive/\n\nKey learnings: \n- be careful when interpret statistical models.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                             |\n|:------------------------|:----------------------------|\n|Name                     |select(house_prices, pric... |\n|Number of rows           |21613                        |\n|Number of columns        |3                            |\n|_______________________  |                             |\n|Column type frequency:   |                             |\n|numeric                  |3                            |\n|________________________ |                             |\n|Group variables          |None                         |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|        sd|    p0|    p25|    p50|    p75|    p100|hist  |\n|:-------------|---------:|-------------:|---------:|---------:|-----:|------:|------:|------:|-------:|:-----|\n|price         |         0|             1| 540088.14| 367127.20| 75000| 321950| 450000| 645000| 7700000|▇▁▁▁▁ |\n|sqft_living   |         0|             1|   2079.90|    918.44|   290|   1427|   1910|   2550|   13540|▇▂▁▁▁ |\n|condition     |         0|             1|      3.41|      0.65|     1|      3|      3|      4|       5|▁▁▇▃▁ |\n\n\n:::\n:::\n\n\n> Observe that the mean price of \\$540,088 is larger than the median of \\$450,000. This is because a small number of very expensive houses are inflating the average. In other words, there are \"outlier\" house prices in our dataset.\n\n### EDA\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\n# Histogram of house price:\nggplot(house_prices, aes(x = price)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"price (USD)\", title = \"House price\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Histogram of sqft_living:\nggplot(house_prices, aes(x = sqft_living)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"living space (square feet)\", title = \"House size\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n  #geom_vline(aes(xintercept=57600), color='blue',alpha=0.3)\n\n# Barplot of condition:\nggplot(house_prices, aes(x = condition)) +\n  geom_bar() +\n  labs(x = \"condition\", title = \"House condition\")\n```\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n:::\n\n\n> First, observe in the bottom plot that most houses are of condition \"3\", with a few more of conditions \"4\" and \"5\", and almost none that are \"1\" or \"2\".\n> Observe in the histogram of sqft_living in the middle plot as well that most houses appear to have less than 5000 square feet of living space. \n> For comparison, a football field in the US is about 57,600 square feet\n\nAll three variable are right-skewed.\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nhouse_prices <- house_prices %>%\n  mutate(\n    log10_price = log10(price),\n    log10_size = log10(sqft_living),\n    condition=factor(condition)\n    )\n# Before log10 transformation:\nggplot(house_prices, aes(x = price)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"price (USD)\", title = \"House price: Before\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# After log10 transformation:\nggplot(house_prices, aes(x = log10_price)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"log10 price (USD)\", title = \"House price: After\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n> geom_parallel_slopes() function is a special purpose function that Evgeni Chasnovski created and included in the moderndive package, since the geom_smooth() method in the ggplot2 package does not have a convenient way to plot parallel slopes models. We plot both resulting models in Figure 11.6, with the interaction model on the left.\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nrequire(moderndive)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: moderndive\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'moderndive'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked _by_ '.GlobalEnv':\n\n    house_prices\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot interaction model\nggplot(house_prices, \n       aes(x = log10_size, y = log10_price, col = condition)) +\n  geom_point(alpha = 0.05) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"log10 price\", \n       x = \"log10 size\", \n       title = \"House prices in Seattle\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot parallel slopes model\nggplot(house_prices, \n       aes(x = log10_size, y = log10_price, col = condition)) +\n  geom_point(alpha = 0.05) +\n  geom_parallel_slopes(se = FALSE) +\n  labs(y = \"log10 price\", \n       x = \"log10 size\", \n       title = \"House prices in Seattle\")\n```\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(house_prices, \n       aes(x = log10_size, y = log10_price, col = condition)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"log10 price\", \n       x = \"log10 size\", \n       title = \"House prices in Seattle\") +\n  facet_wrap(~ condition)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](01_workflow_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit regression model:\nprice_interaction <- lm(log10_price ~ log10_size * condition, \n                        data = house_prices)\n# Get regression table:\nget_regression_table(price_interaction)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 7\n   term                  estimate std_error statistic p_value lower_ci upper_ci\n   <chr>                    <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n 1 intercept                3.33      0.451     7.38    0        2.45     4.22 \n 2 log10_size               0.69      0.148     4.65    0        0.399    0.98 \n 3 condition: 2             0.047     0.498     0.094   0.925   -0.93     1.02 \n 4 condition: 3            -0.367     0.452    -0.812   0.417   -1.25     0.519\n 5 condition: 4            -0.398     0.453    -0.879   0.38    -1.29     0.49 \n 6 condition: 5            -0.883     0.457    -1.93    0.053   -1.78     0.013\n 7 log10_size:condition2   -0.024     0.163    -0.148   0.882   -0.344    0.295\n 8 log10_size:condition3    0.133     0.148     0.893   0.372   -0.158    0.424\n 9 log10_size:condition4    0.146     0.149     0.979   0.328   -0.146    0.437\n10 log10_size:condition5    0.31      0.15      2.07    0.039    0.016    0.604\n```\n\n\n:::\n:::\n\n\nHow to interpreter this model? Remember `lm` model in R can hardly be interpreted intuitively: \n\n> In this case, the “baseline for comparison” group for the categorical variable condition are the condition 1 houses, since “1” comes first alphanumerically. Thus, the intercept and log10_size values are the intercept and slope for log10_size for this baseline group. Next, the condition2 through condition5 terms are the offsets in intercepts relative to the condition 1 intercept. Finally, the log10_size:condition2 through log10_size:condition5 are the offsets in slopes for log10_size relative to the condition 1 slope for log10_size.\n\nEstimate is the value you should use. In the book they ignored p_value. \nTo make a simple linear prediction, you need get all the value down to make a calculation. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# easy way to make a prediction use predict function \n# lucky me I have some background!\npred = price_interaction |> predict(\n  data.frame(log10_size=log10(1900), condition = factor(5, levels=seq(5)))\n  )\n10^pred #don't forget your prediction is in log value.\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n529923.9 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "01_workflow_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}